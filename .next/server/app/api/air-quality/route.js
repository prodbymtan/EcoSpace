"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/air-quality/route";
exports.ids = ["app/api/air-quality/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fair-quality%2Froute&page=%2Fapi%2Fair-quality%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fair-quality%2Froute.ts&appDir=%2FUsers%2Fprodbymtan%2Fnasa-app%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fprodbymtan%2Fnasa-app&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fair-quality%2Froute&page=%2Fapi%2Fair-quality%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fair-quality%2Froute.ts&appDir=%2FUsers%2Fprodbymtan%2Fnasa-app%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fprodbymtan%2Fnasa-app&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_prodbymtan_nasa_app_app_api_air_quality_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/air-quality/route.ts */ \"(rsc)/./app/api/air-quality/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/air-quality/route\",\n        pathname: \"/api/air-quality\",\n        filename: \"route\",\n        bundlePath: \"app/api/air-quality/route\"\n    },\n    resolvedPagePath: \"/Users/prodbymtan/nasa-app/app/api/air-quality/route.ts\",\n    nextConfigOutput,\n    userland: _Users_prodbymtan_nasa_app_app_api_air_quality_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/air-quality/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZhaXItcXVhbGl0eSUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGYWlyLXF1YWxpdHklMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZhaXItcXVhbGl0eSUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRnByb2RieW10YW4lMkZuYXNhLWFwcCUyRmFwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9JTJGVXNlcnMlMkZwcm9kYnltdGFuJTJGbmFzYS1hcHAmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQ087QUFDcEY7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxpRUFBaUU7QUFDekU7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUN1SDs7QUFFdkgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9lY29zcGFjZS1haXItdHJhY2tlci8/YjE0MyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvVXNlcnMvcHJvZGJ5bXRhbi9uYXNhLWFwcC9hcHAvYXBpL2Fpci1xdWFsaXR5L3JvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9haXItcXVhbGl0eS9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2Fpci1xdWFsaXR5XCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9haXItcXVhbGl0eS9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIi9Vc2Vycy9wcm9kYnltdGFuL25hc2EtYXBwL2FwcC9hcGkvYWlyLXF1YWxpdHkvcm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL2Fpci1xdWFsaXR5L3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fair-quality%2Froute&page=%2Fapi%2Fair-quality%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fair-quality%2Froute.ts&appDir=%2FUsers%2Fprodbymtan%2Fnasa-app%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fprodbymtan%2Fnasa-app&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/air-quality/route.ts":
/*!**************************************!*\
  !*** ./app/api/air-quality/route.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n\nasync function GET(request) {\n    const { searchParams } = new URL(request.url);\n    const lat = searchParams.get(\"lat\");\n    const lng = searchParams.get(\"lng\");\n    if (!lat || !lng) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Latitude and longitude are required\"\n        }, {\n            status: 400\n        });\n    }\n    try {\n        // In a real implementation, this would call NASA's Earth observation APIs\n        // For demonstration, we'll return mock data that simulates real air quality data\n        const mockData = {\n            location: {\n                lat: parseFloat(lat),\n                lng: parseFloat(lng)\n            },\n            timestamp: new Date().toISOString(),\n            aqi: Math.floor(Math.random() * 200) + 20,\n            pollutants: {\n                pm25: (Math.random() * 50 + 5).toFixed(1),\n                pm10: (Math.random() * 80 + 10).toFixed(1),\n                o3: (Math.random() * 100 + 20).toFixed(1),\n                no2: (Math.random() * 60 + 10).toFixed(1),\n                so2: (Math.random() * 30 + 5).toFixed(1),\n                co: (Math.random() * 2 + 0.5).toFixed(1)\n            },\n            weather: {\n                temperature: Math.floor(Math.random() * 30 + 10),\n                humidity: Math.floor(Math.random() * 40 + 30),\n                windSpeed: (Math.random() * 15 + 2).toFixed(1),\n                visibility: (Math.random() * 15 + 5).toFixed(1)\n            },\n            forecast: generateForecastData(),\n            dataSource: \"NASA Earth Observation (Simulated)\",\n            lastUpdated: new Date().toISOString()\n        };\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(mockData);\n    } catch (error) {\n        console.error(\"Error fetching air quality data:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to fetch air quality data\"\n        }, {\n            status: 500\n        });\n    }\n}\nfunction generateForecastData() {\n    const forecast = [];\n    const baseAqi = Math.floor(Math.random() * 100) + 30;\n    for(let i = 0; i < 7; i++){\n        const date = new Date();\n        date.setDate(date.getDate() + i);\n        const variation = (Math.random() - 0.5) * 20;\n        const aqi = Math.max(10, Math.min(300, baseAqi + variation + i * 2));\n        forecast.push({\n            date: date.toISOString().split(\"T\")[0],\n            aqi: Math.round(aqi),\n            pm25: Math.max(5, Math.min(50, aqi * 0.3 + (Math.random() - 0.5) * 10)),\n            confidence: Math.floor(Math.random() * 10) + 85 // 85-95% confidence\n        });\n    }\n    return forecast;\n} // Example of how to integrate with real NASA APIs:\n /*\nasync function fetchNASAEarthData(lat: number, lng: number) {\n  const nasaApiKey = process.env.NASA_API_KEY\n  \n  // Example: MODIS Aerosol Optical Depth\n  const modisUrl = `https://api.nasa.gov/planetary/earth/imagery?lon=${lng}&lat=${lat}&date=2024-01-01&dim=0.1&api_key=${nasaApiKey}`\n  \n  // Example: OMI Ozone data\n  const omiUrl = `https://api.nasa.gov/planetary/earth/assets?lon=${lng}&lat=${lat}&date=2024-01-01&dim=0.1&api_key=${nasaApiKey}`\n  \n  try {\n    const [modisResponse, omiResponse] = await Promise.all([\n      fetch(modisUrl),\n      fetch(omiUrl)\n    ])\n    \n    const modisData = await modisResponse.json()\n    const omiData = await omiResponse.json()\n    \n    return {\n      modis: modisData,\n      omi: omiData\n    }\n  } catch (error) {\n    console.error('Error fetching NASA data:', error)\n    throw error\n  }\n}\n*/ \n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUssQ0FBQ2hDO1lBQ2hCSyxNQUFNSixLQUFLMkIsR0FBRyxDQUFDLEdBQUczQixLQUFLNEIsR0FBRyxDQUFDLElBQUk3QixNQUFNLE1BQU0sQ0FBQ0MsS0FBS0UsTUFBTSxLQUFLLEdBQUUsSUFBSztZQUNuRThCLFlBQVloQyxLQUFLQyxLQUFLLENBQUNELEtBQUtFLE1BQU0sS0FBSyxNQUFNLEdBQUcsb0JBQW9CO1FBQ3RFO0lBQ0Y7SUFFQSxPQUFPYztBQUNULEVBRUEsbURBQW1EO0NBQ25EOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBNEJBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZWNvc3BhY2UtYWlyLXRyYWNrZXIvLi9hcHAvYXBpL2Fpci1xdWFsaXR5L3JvdXRlLnRzP2Q1ZmQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dFJlcXVlc3QsIE5leHRSZXNwb25zZSB9IGZyb20gJ25leHQvc2VydmVyJ1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gR0VUKHJlcXVlc3Q6IE5leHRSZXF1ZXN0KSB7XG4gIGNvbnN0IHsgc2VhcmNoUGFyYW1zIH0gPSBuZXcgVVJMKHJlcXVlc3QudXJsKVxuICBjb25zdCBsYXQgPSBzZWFyY2hQYXJhbXMuZ2V0KCdsYXQnKVxuICBjb25zdCBsbmcgPSBzZWFyY2hQYXJhbXMuZ2V0KCdsbmcnKVxuXG4gIGlmICghbGF0IHx8ICFsbmcpIHtcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oeyBlcnJvcjogJ0xhdGl0dWRlIGFuZCBsb25naXR1ZGUgYXJlIHJlcXVpcmVkJyB9LCB7IHN0YXR1czogNDAwIH0pXG4gIH1cblxuICB0cnkge1xuICAgIC8vIEluIGEgcmVhbCBpbXBsZW1lbnRhdGlvbiwgdGhpcyB3b3VsZCBjYWxsIE5BU0EncyBFYXJ0aCBvYnNlcnZhdGlvbiBBUElzXG4gICAgLy8gRm9yIGRlbW9uc3RyYXRpb24sIHdlJ2xsIHJldHVybiBtb2NrIGRhdGEgdGhhdCBzaW11bGF0ZXMgcmVhbCBhaXIgcXVhbGl0eSBkYXRhXG4gICAgXG4gICAgY29uc3QgbW9ja0RhdGEgPSB7XG4gICAgICBsb2NhdGlvbjoge1xuICAgICAgICBsYXQ6IHBhcnNlRmxvYXQobGF0KSxcbiAgICAgICAgbG5nOiBwYXJzZUZsb2F0KGxuZylcbiAgICAgIH0sXG4gICAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcbiAgICAgIGFxaTogTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMjAwKSArIDIwLFxuICAgICAgcG9sbHV0YW50czoge1xuICAgICAgICBwbTI1OiAoTWF0aC5yYW5kb20oKSAqIDUwICsgNSkudG9GaXhlZCgxKSxcbiAgICAgICAgcG0xMDogKE1hdGgucmFuZG9tKCkgKiA4MCArIDEwKS50b0ZpeGVkKDEpLFxuICAgICAgICBvMzogKE1hdGgucmFuZG9tKCkgKiAxMDAgKyAyMCkudG9GaXhlZCgxKSxcbiAgICAgICAgbm8yOiAoTWF0aC5yYW5kb20oKSAqIDYwICsgMTApLnRvRml4ZWQoMSksXG4gICAgICAgIHNvMjogKE1hdGgucmFuZG9tKCkgKiAzMCArIDUpLnRvRml4ZWQoMSksXG4gICAgICAgIGNvOiAoTWF0aC5yYW5kb20oKSAqIDIgKyAwLjUpLnRvRml4ZWQoMSlcbiAgICAgIH0sXG4gICAgICB3ZWF0aGVyOiB7XG4gICAgICAgIHRlbXBlcmF0dXJlOiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAzMCArIDEwKSxcbiAgICAgICAgaHVtaWRpdHk6IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDQwICsgMzApLFxuICAgICAgICB3aW5kU3BlZWQ6IChNYXRoLnJhbmRvbSgpICogMTUgKyAyKS50b0ZpeGVkKDEpLFxuICAgICAgICB2aXNpYmlsaXR5OiAoTWF0aC5yYW5kb20oKSAqIDE1ICsgNSkudG9GaXhlZCgxKVxuICAgICAgfSxcbiAgICAgIGZvcmVjYXN0OiBnZW5lcmF0ZUZvcmVjYXN0RGF0YSgpLFxuICAgICAgZGF0YVNvdXJjZTogJ05BU0EgRWFydGggT2JzZXJ2YXRpb24gKFNpbXVsYXRlZCknLFxuICAgICAgbGFzdFVwZGF0ZWQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKVxuICAgIH1cblxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihtb2NrRGF0YSlcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBmZXRjaGluZyBhaXIgcXVhbGl0eSBkYXRhOicsIGVycm9yKVxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IGVycm9yOiAnRmFpbGVkIHRvIGZldGNoIGFpciBxdWFsaXR5IGRhdGEnIH0sIHsgc3RhdHVzOiA1MDAgfSlcbiAgfVxufVxuXG5mdW5jdGlvbiBnZW5lcmF0ZUZvcmVjYXN0RGF0YSgpIHtcbiAgY29uc3QgZm9yZWNhc3QgPSBbXVxuICBjb25zdCBiYXNlQXFpID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTAwKSArIDMwXG4gIFxuICBmb3IgKGxldCBpID0gMDsgaSA8IDc7IGkrKykge1xuICAgIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZSgpXG4gICAgZGF0ZS5zZXREYXRlKGRhdGUuZ2V0RGF0ZSgpICsgaSlcbiAgICBcbiAgICBjb25zdCB2YXJpYXRpb24gPSAoTWF0aC5yYW5kb20oKSAtIDAuNSkgKiAyMFxuICAgIGNvbnN0IGFxaSA9IE1hdGgubWF4KDEwLCBNYXRoLm1pbigzMDAsIGJhc2VBcWkgKyB2YXJpYXRpb24gKyAoaSAqIDIpKSlcbiAgICBcbiAgICBmb3JlY2FzdC5wdXNoKHtcbiAgICAgIGRhdGU6IGRhdGUudG9JU09TdHJpbmcoKS5zcGxpdCgnVCcpWzBdLFxuICAgICAgYXFpOiBNYXRoLnJvdW5kKGFxaSksXG4gICAgICBwbTI1OiBNYXRoLm1heCg1LCBNYXRoLm1pbig1MCwgYXFpICogMC4zICsgKE1hdGgucmFuZG9tKCkgLSAwLjUpICogMTApKSxcbiAgICAgIGNvbmZpZGVuY2U6IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwKSArIDg1IC8vIDg1LTk1JSBjb25maWRlbmNlXG4gICAgfSlcbiAgfVxuICBcbiAgcmV0dXJuIGZvcmVjYXN0XG59XG5cbi8vIEV4YW1wbGUgb2YgaG93IHRvIGludGVncmF0ZSB3aXRoIHJlYWwgTkFTQSBBUElzOlxuLypcbmFzeW5jIGZ1bmN0aW9uIGZldGNoTkFTQUVhcnRoRGF0YShsYXQ6IG51bWJlciwgbG5nOiBudW1iZXIpIHtcbiAgY29uc3QgbmFzYUFwaUtleSA9IHByb2Nlc3MuZW52Lk5BU0FfQVBJX0tFWVxuICBcbiAgLy8gRXhhbXBsZTogTU9ESVMgQWVyb3NvbCBPcHRpY2FsIERlcHRoXG4gIGNvbnN0IG1vZGlzVXJsID0gYGh0dHBzOi8vYXBpLm5hc2EuZ292L3BsYW5ldGFyeS9lYXJ0aC9pbWFnZXJ5P2xvbj0ke2xuZ30mbGF0PSR7bGF0fSZkYXRlPTIwMjQtMDEtMDEmZGltPTAuMSZhcGlfa2V5PSR7bmFzYUFwaUtleX1gXG4gIFxuICAvLyBFeGFtcGxlOiBPTUkgT3pvbmUgZGF0YVxuICBjb25zdCBvbWlVcmwgPSBgaHR0cHM6Ly9hcGkubmFzYS5nb3YvcGxhbmV0YXJ5L2VhcnRoL2Fzc2V0cz9sb249JHtsbmd9JmxhdD0ke2xhdH0mZGF0ZT0yMDI0LTAxLTAxJmRpbT0wLjEmYXBpX2tleT0ke25hc2FBcGlLZXl9YFxuICBcbiAgdHJ5IHtcbiAgICBjb25zdCBbbW9kaXNSZXNwb25zZSwgb21pUmVzcG9uc2VdID0gYXdhaXQgUHJvbWlzZS5hbGwoW1xuICAgICAgZmV0Y2gobW9kaXNVcmwpLFxuICAgICAgZmV0Y2gob21pVXJsKVxuICAgIF0pXG4gICAgXG4gICAgY29uc3QgbW9kaXNEYXRhID0gYXdhaXQgbW9kaXNSZXNwb25zZS5qc29uKClcbiAgICBjb25zdCBvbWlEYXRhID0gYXdhaXQgb21pUmVzcG9uc2UuanNvbigpXG4gICAgXG4gICAgcmV0dXJuIHtcbiAgICAgIG1vZGlzOiBtb2Rpc0RhdGEsXG4gICAgICBvbWk6IG9taURhdGFcbiAgICB9XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgTkFTQSBkYXRhOicsIGVycm9yKVxuICAgIHRocm93IGVycm9yXG4gIH1cbn1cbiovXG4iXSwibmFtZXMiOlsiTmV4dFJlc3BvbnNlIiwiR0VUIiwicmVxdWVzdCIsInNlYXJjaFBhcmFtcyIsIlVSTCIsInVybCIsImxhdCIsImdldCIsImxuZyIsImpzb24iLCJlcnJvciIsInN0YXR1cyIsIm1vY2tEYXRhIiwibG9jYXRpb24iLCJwYXJzZUZsb2F0IiwidGltZXN0YW1wIiwiRGF0ZSIsInRvSVNPU3RyaW5nIiwiYXFpIiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwicG9sbHV0YW50cyIsInBtMjUiLCJ0b0ZpeGVkIiwicG0xMCIsIm8zIiwibm8yIiwic28yIiwiY28iLCJ3ZWF0aGVyIiwidGVtcGVyYXR1cmUiLCJodW1pZGl0eSIsIndpbmRTcGVlZCIsInZpc2liaWxpdHkiLCJmb3JlY2FzdCIsImdlbmVyYXRlRm9yZWNhc3REYXRhIiwiZGF0YVNvdXJjZSIsImxhc3RVcGRhdGVkIiwiY29uc29sZSIsImJhc2VBcWkiLCJpIiwiZGF0ZSIsInNldERhdGUiLCJnZXREYXRlIiwidmFyaWF0aW9uIiwibWF4IiwibWluIiwicHVzaCIsInNwbGl0Iiwicm91bmQiLCJjb25maWRlbmNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./app/api/air-quality/route.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fair-quality%2Froute&page=%2Fapi%2Fair-quality%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fair-quality%2Froute.ts&appDir=%2FUsers%2Fprodbymtan%2Fnasa-app%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fprodbymtan%2Fnasa-app&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();